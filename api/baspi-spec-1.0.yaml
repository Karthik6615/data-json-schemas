openapi: "3.0.3"
info:
  description: These are the BASPI APIs.
  version: Beta 1.0.0
  title: BASPI API Catalogue
paths:
  /property:
    get:
      summary: search for property
      description: Get property by partner reference, UPRN, title number or address (as flat or house number and postcode).
      operationId: getProperty
      parameters:
        - name: "uprn"
          in: "query"
          description: "UPRN"
          required: false
          style: "form"
          explode: true
          schema:
            type: "string"
        - name: "titleNumber"
          in: "query"
          description: "Title number"
          required: false
          style: "form"
          explode: true
          schema:
            type: "string"
        - name: "address"
          in: "query"
          description: "Address (house or flat number and postcode)"
          required: false
          style: "form"
          explode: true
          schema:
            type: "string"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /dataAvailable/{uprn}:
    get:
      summary: check which baspi entities are available
      operationId: getBaspiData
      description: Get data based on entities available.
      parameters:
        - name: uprn
          in: path
          required: true
          description: UPRN.
          schema:
            type: "string"
            format: "string"
            example: "1234567"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaspiDataAvailable'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /data/{uprn}:
    get:
      summary: get baspi data
      description: Get baspi details.
      operationId: getBaspi
      parameters:
        - name: uprn
          in: path
          required: true
          description: UPRN.
          schema:
            type: "string"
            format: "string"
            example: "1234567"
        - name: "materialFacts"
          in: "query"
          description: "Material facts"
          required: true
          style: "form"
          explode: true
          schema:
            type: array
            items:
              type: string
            example:
            - propertyToBeSold
            - additionalInformation
            - alterationsAndChanges
            - boundaries
            - consumerProtectionRegulationsDeclaration
            - disputesAndComplaints
            - fixturesAndFittings
            - insurance
            - notices
            - otherIssues
            - rightsAndInformalArrangements
            - specialistIssues
            - utilitiesOrServices
        - name: "additionalLegalInformation"
          in: "query"
          description: "Additional Legal Information"
          required: true
          style: "form"
          explode: true
          schema:
            type: array
            items:
              type: string
            example:
            - legalOwnership
            - aboutTheProperty
            - servicesCrossing
            - energyAndMeters
            - guaranteesWarrantiesAndIndemnityInsurances
            - occupiers
            - completionAndMoving
            - digitalSignatures
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBaspi'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
#      tags:
#        - baspi
      summary: update baspi
      description: Update a baspi.
      operationId: updateBaspi
      parameters:
        - name: uprn
          in: path
          required: true
          description: UPRN
          schema:
            type: "string"
            format: "string"
            example: "1234567"
      responses:
        '204':
          $ref: '#/components/responses/Patched'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorised'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
      requestBody:
        description: Update baspi object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBaspi'
          image/png:
            schema:
              type: string
              format: binary
components:
  responses:
    Success: #200
      description: Success
    Created: #201
      description: Success - entity created
      headers:
        location:
          schema:
            type: string
            format: UUID
          description: Network Id of the created resource
    Accepted: #202
      description: Accepted
    Patched: #204
      description: No Content
    BadRequest: #400
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "400"
                message: "Bad Request"
                description: "Error code to explain why the request cannot be satisfied (eg. unsupported feature or restricted functionality)"
                errors:
                  - message: "Request Payload is malformed"
                errorCode: 1000
                errorReference: "WS-1000-123456"
                path: "/path"
    Unauthorised: #401
      description: Unauthorised
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "401"
                message: "Unauthorised"
                description: "The provided authentication credentials are incorrect or not present. Generally, this is due to the lack of an 'Authorization' header"
                errors:
                  - message: "Unauthorised to access the resource"
                errorCode: 1002
                errorReference: "WS-1000-123456"
                path: "/path"
    Forbidden: #403
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "403"
                message: "Forbidden"
                description: "The authentication credentials request do not provide sufficient scope to fulfill the request"
                errors:
                  - message: "Forbidden to access the resource"
                errorCode: 1004
                errorReference: "WS-1000-123456"
                path: "/path"
    NotFound: #404
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "404"
                message: "Not Found"
                description: "The requested resource was not found"
                errors:
                  - message: "Requested resource not found"
                errorCode: 1001
                errorReference: "WS-1000-123456"
                path: "/path"
    ClientError: #422
      description: Client Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "422"
                message: "Client error"
                description: "A validation error has occurred. The error response body will provide additional information on the failure(s)"
                errors:
                  - message: "Client error"
                errorCode: 1003
                errorReference: "WS-1000-123456"
                path: "/path"
    ServerError: #500
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
          examples:
            sample1:
              value:
                timestamp: "2019-09-16T22:14:45.624+0000"
                code: "500"
                message: "Internal Server Error"
                description: "The request triggered an unexpected error which will be logged and investigated."
                errors:
                  - message: "Internal Server Error"
                errorCode: 1500
                errorReference: "WS-1000-123456"
                path: "/path"
  #Schemas
  schemas:
    Response:
      type: object
      properties:
        timestamp:
          type: string
          format: 'date-time'
        code:
          type: string
        message:
          type: string
        description:
          type: string
        errors:
          type: array
          items:
            type: string
          example: [ "error"]
        errorCode:
          type: string
        errorReference:
          type: string
        path:
          type: string
      required:
        - code
        - message
    Property:
      type: object
      required:
        - location
      properties:
        uprn:
          type: string
          format: string
          example: "VTO4T7IO71I9"
        titleNumber:
          type: string
          format: string
          example: "LVL33773"
        address:
          type: string
          format: string
          example: "1 Richmond Street, Hounslow."
    BaspiDataAvailable:
      title: Disclosure of material facts at the point of marketing
      required:
        - materialFacts
        - additionalLegalInformation
      properties:
        materialFacts:
          $ref: '#/components/schemas/MaterialFacts'
        additionalLegalInformation:
          $ref: '#/components/schemas/AdditionalLegalInformation'
    MaterialFacts:
      title: Disclosure of material facts at the point of marketing
      required:
        - propertyToBeSold
        - additionalInformation
        - alterationsAndChanges
        - boundaries
        - consumerProtectionRegulationsDeclaration
        - disputesAndComplaints
        - fixturesAndFittings
        - insurance
        - notices
        - otherIssues
        - rightsAndInformalArrangements
        - specialistIssues
        - utilitiesOrServices
      properties:
        propertyToBeSold:
          $ref: '#/components/schemas/yesNo'
        additionalInformation:
          $ref: '#/components/schemas/yesNo'
        alterationsAndChanges:
          $ref: '#/components/schemas/yesNo'
        boundaries:
          $ref: '#/components/schemas/yesNo'
        consumerProtectionRegulationsDeclaration:
          $ref: '#/components/schemas/yesNo'
        disputesAndComplaints:
          $ref: '#/components/schemas/yesNo'
        fixturesAndFittings:
          $ref: '#/components/schemas/yesNo'
        insurance:
          $ref: '#/components/schemas/yesNo'
        notices:
          $ref: '#/components/schemas/yesNo'
        otherIssues:
          $ref: '#/components/schemas/yesNo'
        rightsAndInformalArrangements:
          $ref: '#/components/schemas/yesNo'
        specialistIssues:
          $ref: '#/components/schemas/yesNo'
        utilitiesOrServices:
          $ref: '#/components/schemas/yesNo'
    AdditionalLegalInformation:
      title: Additional Legal information
      required:
        - legalOwnership
        - aboutTheProperty
        - servicesCrossing
        - energyAndMeters
        - guaranteesWarrantiesAndIndemnityInsurances
        - occupiers
        - completionAndMoving
        - digitalSignatures
      properties:
         legalOwnership:
            $ref: '#/components/schemas/yesNo'
         aboutTheProperty:
           $ref: '#/components/schemas/yesNo'
         servicesCrossing:
           $ref: '#/components/schemas/yesNo'
         energyAndMeters:
           $ref: '#/components/schemas/yesNo'
         guaranteesWarrantiesAndIndemnityInsurances:
           $ref: '#/components/schemas/yesNo'
         occupiers:
           $ref: '#/components/schemas/yesNo'
         completionAndMoving:
           $ref: '#/components/schemas/yesNo'
         digitalSignatures:
           $ref: '#/components/schemas/yesNo'
    GetBaspi:
      title: Get BASPI schema
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: "9d29871b-4f93-4aab-9ccc-eb63f5e1b494"
        - $ref: '#/components/schemas/CreateBaspi'
    UpdateBaspi:
      title: Update BASPI schema
      allOf:
        - $ref: '#/components/schemas/CreateBaspi'
    CreateBaspi:
      title: Create BASPI schema
      required:
        - additionalLegalInformation
        - materialFacts
      type: object
      properties:
        materialFacts:
          title: Disclosure of material facts at the point of marketing
          required:
            - propertyToBeSold
            - additionalInformation
            - alterationsAndChanges
            - boundaries
            - consumerProtectionRegulationsDeclaration
            - disputesAndComplaints
            - fixturesAndFittings
            - insurance
            - notices
            - otherIssues
            - rightsAndInformalArrangements
            - specialistIssues
            - utilitiesOrServices
          type: object
          properties:
            propertyToBeSold:
              title: Property to be sold
              required:
                - address
                - councilTax
                - delayFactors
                - listingAndConservation
                - parkingArrangements
                - typeOfConstructionAndEnergyEfficiency
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/address'
                delayFactors:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                ownership:
                  title: About the ownership of the property
                  required:
                    - ownershipType
                  type: object
                  properties:
                    ownershipType:
                      title: Choose the type of ownership
                      type: string
                      description: '*A Managed Freehold is any freehold where there
                        are shared amenities, the maintenance of which you pay for
                        through an estate rentcharge, service charge, informal or
                        formal contribution.'
                      enum:
                        - Freehold
                        - Managed Freehold
                        - Leasehold
                        - Commonhold
                        - Other
                parkingArrangements:
                  title: What parking arrangements are there?
                  required:
                    - parkingArrangementsType
                  type: object
                  properties:
                    parkingArrangementsType:
                      title: Choose the type of parking arrangements
                      type: string
                      enum:
                        - Garage
                        - Allocated parking space
                        - Driveway
                        - On street
                        - Resident permit
                        - Metered parking
                        - Communal parking
                        - None
                        - Other
                listingAndConservation:
                  title: Listing and Conservation
                  required:
                    - hasTreePreservationOrder
                    - isConservationArea
                    - isListed
                  type: object
                  properties:
                    isListed:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    isConservationArea:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    hasTreePreservationOrder:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                typeOfConstructionAndEnergyEfficiency:
                  title: Type of Construction and Energy Efficiency
                  required:
                    - energyEfficiencyRating
                    - hasFlammableExternalWallSystem
                    - isStandardForm
                  type: object
                  properties:
                    isStandardForm:
                      $ref: '#/components/schemas/yesNoDetailIfNo'
                    hasFlammableExternalWallSystem:
                      title: Does the property have potentially flammable external
                        wall system - including cladding and balconies etc.?
                      type: string
                      enum:
                        - Yes (EWS form attached)
                        - Yes (No assement to hand)
                        - No
                    energyEfficiencyRating:
                      title: What is the energy efficiency rating of the property
                        according to the latest Energy Performance Certificate?
                      type: string
                      enum:
                        - A
                        - B
                        - C
                        - D
                        - E
                        - F
                        - G
                        - Exempt Property
                councilTax:
                  title: Council Tax
                  required:
                    - councilTaxAffectingAlterations
                    - councilTaxBand
                  type: object
                  properties:
                    councilTaxBand:
                      title: Which Council Tax band does this property fall within?
                      type: string
                      enum:
                        - A
                        - B
                        - C
                        - D
                        - E
                        - F
                        - G
                        - H
                    councilTaxAffectingAlterations:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
              description: Throughout this form this property may be referred to as
                ‘the property’, ‘this property’ or ‘your property’.
            disputesAndComplaints:
              title: Disputes and Complaints
              type: object
              properties:
                hasDisputesAndComplaints:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            alterationsAndChanges:
              title: Alterations and Changes to the Property
              type: object
              properties:
                hasStructuralAlterations:
                  $ref: '#/components/schemas/yesNoDetailConsents'
                windowReplacementsSince2002:
                  $ref: '#/components/schemas/yesNoDetailConsents'
                hasAddedConservatory:
                  $ref: '#/components/schemas/yesNoDetailConsents'
                planningPermissionBreaches:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                unresolvedPlanningIssues:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            notices:
              title: Notices which Affect the Property
              type: object
              properties:
                neighbourDevelopment:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                planningApplication:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                requiredMaintenance:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                listedBuildingApplication:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                infrastructureProject:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                partyWallAct:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                other:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
              description: Are you aware of, or have you received any of the following
                notices?
            specialistIssues:
              title: Specialist Issues
              type: object
              properties:
                dryRotEtcTreatment:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                containsAsbestos:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                japaneseKnotweed:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                subsidenceOrStructuralFault:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                ongoingHealthOrSafetyIssue:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            fixturesAndFittings:
              title: Fixtures and Fittings
              type: object
              properties:
                itemsToRemove:
                  title: List any items, which would be considered a fixture or fitting,
                    that you intend to take. E.g. Carpets, curtains, light fittings,
                    fitted cupboards, etc
                  type: string
                itemsToInclude:
                  title: What additional furniture or possessions are you very likely
                    to include in the sale, irrespective of sale price?
                  type: string
              description: 'NOTE:  This is so a buyer’s offer can take into account
                whether you are taking something of value or leaving extra items.  A
                full list will need to be completed after the sale is agreed.'
            utilitiesOrServices:
              title: Utilities or Services
              type: object
              properties:
                electricity:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                gas:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                lpg:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                oil:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                telephone:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                cableSatelliteTV:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                broadband:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                solarPanels:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                other:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                mainsWater:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                mainsSurfaceWaterDrainage:
                  $ref: '#/components/schemas/yesNoConnectedSupplier'
                mainsFoulDrainage:
                  title: Mains foul drainage
                  type: object
                  properties:
                    yesNo:
                      title: ""
                      type: string
                      enum:
                        - Yes
                        - No
                greenDealLoan:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                centralHeating:
                  title: Is there full/partial central heating in your property?
                  type: string
                  enum:
                    - Yes
                    - No
              description: Please indicate which services are connected to the property.
            insurance:
              title: Insurance
              type: object
              properties:
                isInsured:
                  title: Do you insure the property?
                  type: string
                  enum:
                    - Yes
                    - No
            boundaries:
              title: Boundaries
              type: object
              properties:
                partOutsideLegalOwnership:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                partOnSeparateSiteOrDeed:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                boundariesDifferFromTitlePlan:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                boundaryAlterationProposal:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
              description: You will need to check your title to answer these questions.  If
                you do not have a copy, for a small fee to HM Land Registry, you can
                download both the title register and the title plan of the property
                here.
            rightsAndInformalArrangements:
              title: Rights and Informal Arrangements
              type: object
              properties:
                sharedContributions:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                neighbouringLandRights:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                accessRestrictionAttempts:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                rightsOrArrangements:
                  title: Do you know if any of the following rights or arrangements
                    affect the property?
                  type: object
                  properties:
                    publicRightOfWay:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    rightsofLightOrSupport:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    rightsCreatedThroughCustom:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    minesAndMinerals:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    churchChancel:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                    other:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
            otherIssues:
              title: Other Issues Affecting the Property
              type: object
              properties:
                environmental:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                excessiveNoise:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                crime:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                cautionOrConviction:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                failedTransactionsInLast12Months:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                comments:
                  title: Please add any comments to questions 11.1-11.5 in this box
                    and provide any relevant documentation eg flood risk report, radon
                    report and confirmation of any remedial measures on construction
                    to reduce risk etc
                  type: string
            additionalInformation:
              title: Additional Information
              type: object
              properties:
                restrictionsOnUseNotCompliedWith:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                otherMaterialIssue:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            consumerProtectionRegulationsDeclaration:
              title: Consumer Protection Regulations - Declaration
              type: object
              properties:
                name:
                  title: Print Name
                  type: string
                signatures:
                  title: Signatures
                  type: string
                date:
                  title: Date of signatures
                  type: string
                  format: date
              description: Digital signature to the follow declaration to be signed
                by all owners or their representative. By signing Part A of the form
                I/we confirm the answers to be truthful and accurate and to the best
                of my/our knowledge. The questions have been designed to assist with
                the disclosure of material information and any misleading or incorrect
                answers are likely to be exposed later in the legal process which
                may hinder my/our sale. I/we will provide my property lawyer with
                the additional documentation in support of the information supplied
                on this form. If there are any changes which alter the information
                provided, I/we will immediately notify the person marketing the property
                as well as my/our property lawyer.
        additionalLegalInformation:
          title: Additional information required for the legal process
          type: object
          properties:
            legalOwnership:
              title: Legal Ownership
              type: object
              properties:
                namesOfLegalOwners:
                  title: Full names of all legal owner(s) [NB there could be up to
                    4 registered owners at HM Land Registry]
                  type: object
                  properties:
                    firstName:
                      title: First name
                      type: string
                    middleNames:
                      title: Middle Name(s)
                      type: string
                    surname:
                      title: Surname
                      type: string
                sellersPropertyLawyer:
                  title: Seller’s property lawyer (if known)
                  type: object
                  properties:
                    name:
                      title: Name
                      type: string
                    address:
                      title: Address
                      type: string
                    email:
                      title: Email
                      type: string
                    reference:
                      title: Reference
                      type: string
                sellersCapacity:
                  title: Capacity in which the Seller sells
                  type: string
                  enum:
                    - Legal Owner
                    - Personal Representative for a Deceased Owner
                    - Under Power of Attorney
                    - Mortgagee in Possession
                    - Other (please give details)
            aboutTheProperty:
              title: About the Property
              type: object
              properties:
                legalBoundaries:
                  title: Legal Boundaries - Please indicate who has repaired, or treated
                    as belonging to them, each of the boundaries.  Identify each boundary
                    as if you were looking at the property from the road
                  type: object
                  properties:
                    left:
                      title: On the left
                      type: string
                      enum:
                        - Seller
                        - Shared
                        - Next-door neighbour
                    right:
                      title: On the right
                      type: string
                      enum:
                        - Seller
                        - Shared
                        - Next-door neighbour
                    rear:
                      title: At the rear
                      type: string
                      enum:
                        - Seller
                        - Shared
                        - Next-door neighbour
                    front:
                      title: At the front
                      type: string
                      enum:
                        - Seller
                        - Shared
                        - Next-door neighbour
                    areBoundariesUniform:
                      $ref: '#/components/schemas/yesNoDetailIfYes'
                haveBoundaryFeaturesMoved:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                adjacentLandIncluded:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                titlePlanAccurate:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                flyingFreehold:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            servicesCrossing:
              title: Services Crossing Other Property
              type: object
              properties:
                pipesWiresCablesDrainsToProperty:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                pipesWiresCablesDrainsFromProperty:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                formalOrInformalAgreements:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            energyAndMeters:
              title: Energy and Meters
              type: object
              properties:
                testedByQualifiedElectrician:
                  title: Please confirm the year that the electrics at the property
                    were last tested by a qualified electrician.
                  type: string
                  description: If you have not had them tested then select N/A
                  enum:
                    - Date
                    - N/A
                electricalWorkSince2005:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
                solarPanels:
                  title: Solar or photovoltaic panels
                  type: object
                  properties:
                    hasSolarPanels:
                      title: Are there solar or photovoltaic panels installed at the
                        property?
                      type: string
                      enum:
                        - Yes
                        - No
                electricityMeterLocation:
                  title: 'Please describe, or attach a photograph of, the location
                    of any electricity meter(if any):'
                  type: string
                gasMeterLocation:
                  title: Please describe, or attach a photograph of, the location
                    of any gas meter (if any)
                  type: string
                stopcockAndWaterMeterLocation:
                  title: Please describe, or attach a photograph of, the location
                    of the stopcock and water meter(if any)
                  type: string
            guaranteesWarrantiesAndIndemnityInsurances:
              title: Guarantees, Warranties and Indemnity Insurances
              type: object
              properties:
                hasValidGuaranteesOrWarranties:
                  title: Are there any valid guarantees or warranties relating to
                    this property?
                  type: string
                  enum:
                    - Yes
                    - No
            occupiers:
              title: Occupiers
              type: object
              properties:
                sellerLivesAtProperty:
                  $ref: '#/components/schemas/yesNo'
                otherOver17sAtProperty:
                  title: Please specify the full names and ages of anyone aged over
                    17, other than the owner(s), who live at the property?
                  type: array
                  items:
                    $ref: '#/components/schemas/fullNameAndAge'
                over17sWillSignToConfirmWillVacate:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            completionAndMoving:
              title: Completion and Moving
              type: object
              properties:
                willRemoveAllRubbish:
                  title: Please confirm that on completion you will remove all rubbish
                    and items not included in the sale from the property including
                    its garden, loft and any sheds or outbuildings.
                  type: boolean
                otherPropertyInChain:
                  $ref: '#/components/schemas/yesNo'
                moveRestrictionDates:
                  $ref: '#/components/schemas/yesNoDetailIfYes'
            digitalSignatures:
              title: Digital signature to the follow declaration to be signed by all
                owners or their representative
              type: object
              properties:
                confirmWillProvideAdditionalDocumentation:
                  title: I/we will provide my property lawyer with the additional
                    documentation in support of the information supplied on this form.
                  type: boolean
                confirmInformationIsAccurate:
                  title: I/we confirm that all information provided is accurate to
                    the best of our knowledge and if we become aware of any change
                    to/changes which alter the information supplied/provided prior
                    to exchange of contracts for the sale of the property, I/we will
                    update immediately notify the person marketing the property as
                    well as my/our property lawyer. All sellers should sign this form
                  type: boolean
                name:
                  title: Print Name
                  type: string
                signatures:
                  title: Signatures
                  type: string
                date:
                  title: Date of signatures
                  type: string
                  format: date
      description: This is an implementation of the BASPI schema
      x-extension-1:
#common objects
    yesNo:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
      required:
        - yesNo
    yesNoDetailIfYes:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
    yesNoDetailIfYes1:
      oneOf:
        - properties:
            yesNo:
              enum:
                - 'No'
        - properties:
            yesNo:
              enum:
                - 'Yes'
            details:
              title: Details
              type: string
            attachments:
              title: Attachments
              type: array
              items:
                type: string
          required:
            - details
    yesNoDetailIfNo:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
    yesNoDetailIfNo1:
      oneOf:
        - properties:
            yesNo:
              enum:
                - 'Yes'
        - properties:
            yesNo:
              enum:
                - 'No'
            details:
              title: Details
              type: string
            attachments:
              title: Attachments
              type: array
              items:
                type: string
          required:
            - details
    yesNoNotRequiredDetailIfNoNotRequired:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
            - Not required
    yesNoNotRequiredDetailIfNoNotRequired1:
      oneOf:
        - properties:
            yesNo:
              enum:
                - 'Yes'
            attachments:
              title: Attachments
              type: array
              items:
                type: string
          required:
            - documents
        - properties:
            yesNo:
              enum:
                - 'No'
                - Not required
            reasons:
              title: Please outline the reasons why
              type: string
          required:
            - reasons
    yesNoConnectedSupplier:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
    yesNoConnectedSupplier1:
      oneOf:
        - properties:
            yesNo:
              enum:
                - 'No'
        - properties:
            yesNo:
              enum:
                - 'Yes'
            connected:
              title: Connected? (Yes, No or Date to be connected)
              type: string
            supplier:
              title: Supplier (if known)
              type: string
            maintenanceAgreements:
              title:
                Do you have any licences, maintenance agreements, contracts or
                service agreements in relation to this service?
              $ref: '#/components/schemas/yesNoDetailIfYes'
          required:
            - connected
    yesNoDetailConsents:
      title: ''
      type: object
      properties:
        yesNo:
          type: string
          title: ''
          enum:
            - 'Yes'
            - 'No'
    yesNoDetailConsents1:
      oneOf:
        - properties:
            yesNo:
              enum:
                - 'No'
        - properties:
            yesNo:
              enum:
                - 'Yes'
            details:
              title: Details
              type: string
            buildingRegApproval:
              title: >-
                Was building regulation approval and a completion certificate
                obtained or an equivalent Competent Person Scheme Certificate?
              $ref: '#/components/schemas/yesNoNotRequiredDetailIfNoNotRequired'
            planningPermission:
              title: Was planning permission obtained?
              $ref: '#/components/schemas/yesNoNotRequiredDetailIfNoNotRequired'
            listedBuildingConsent:
              title: Was listed building consent obtained?
              $ref: '#/components/schemas/yesNoNotRequiredDetailIfNoNotRequired'
            deedRestrictionConsent:
              title: >-
                Was any consent under a restriction in the deeds obtained?
                E.g. if your deeds require consent from someone else to alter
                or extend the property
              $ref: '#/components/schemas/yesNoNotRequiredDetailIfNoNotRequired'
            unfinished:
              title: Are any of the works listed above unfinished?
              $ref: '#/components/schemas/yesNoDetailIfYes'
          required:
            - details
    address:
      type: object
      properties:
        address1:
          title: Address 1
          type: string
        address2:
          title: Address 2
          type: string
        town:
          title: Town
          type: string
        county:
          title: County
          type: string
        postcode:
          title: Postcode
          type: string
      required:
        - address1
        - postcode
    fullNameAndAge:
      type: object
      properties:
        firstName:
          title: First Name
          type: string
        middleNames:
          title: Middle name(s) if any
          type: string
        lastName:
          title: LastName
          type: string
        age:
          title: Age
          type: integer
      required:
        - firstName
        - lastName
        - age